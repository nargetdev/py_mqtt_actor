services:
  emqx:
    image: emqx/emqx:latest
    container_name: emqx
    ports:
      - "1883:1883"     # MQTT
      - "8083:8083"     # MQTT over WebSocket
      - "8084:8084"     # MQTT over Secure WebSocket
      - "8883:8883"     # MQTT Secure
      - "18083:18083"   # Dashboard
    environment:
      - EMQX_NAME=emqx
      - EMQX_HOST=127.0.0.1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/opt/emqx/bin/emqx", "ctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 60s

  function-based-actor:
    build:
      context: ..
      dockerfile: example/Dockerfile
    container_name: function-based-actor
    depends_on:
      emqx:
        condition: service_healthy
    environment:
      - MQTT_BROKER=emqx
      - MQTT_PORT=1883
      - LOG_LEVEL=INFO
    volumes:
      - ./prints:/app/prints
    restart: unless-stopped
    # networks:
    #   - mqtt-network

  resp-subscriber:
    image: eclipse-mosquitto:latest
    container_name: resp-subscriber
    depends_on:
      emqx:
        condition: service_healthy
    entrypoint: ["mosquitto_sub", "-h", "emqx", "-t", "RESP/#"]
    restart: unless-stopped

  emoji-resp-subscriber:
    image: eclipse-mosquitto:latest
    container_name: emoji-resp-subscriber
    depends_on:
      emqx:
        condition: service_healthy
    entrypoint: ["mosquitto_sub", "-h", "emqx", "-t", "RESP/+/test-object-printer/+/+/EMOJI", "-v", "--debug"]
    restart: unless-stopped

  sync-subscriber:
    image: eclipse-mosquitto:latest
    container_name: sync-subscriber
    depends_on:
      emqx:
        condition: service_healthy
    entrypoint: ["mosquitto_sub", "-h", "emqx", "-t", "SYNC/#"]
    restart: unless-stopped


  test-function-based-actor:
    image: eclipse-mosquitto:latest
    container_name: test-function-based-actor
    depends_on:
      emqx:
        condition: service_healthy
      function-based-actor:
        condition: service_started
      resp-subscriber:
        condition: service_started
      sync-subscriber:
        condition: service_started
    environment:
      - MQTT_BROKER=emqx
      - MQTT_PORT=1883
    volumes:
      - ./prints:/app/prints
      - ./tests/test_publish_message_request.sh:/test_publish_message_request.sh
    entrypoint: ["/bin/sh", "/test_publish_message_request.sh"]
    # Install mosquitto-clients at runtime for test script
    restart: "no"